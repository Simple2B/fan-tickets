"""init

Revision ID: 42b5769b28c5
Revises: 
Create Date: 2024-02-02 12:20:52.064176

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '42b5769b28c5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pictures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=256), nullable=False),
    sa.Column('mimetype', sa.String(length=32), nullable=False),
    sa.Column('file', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_pictures'))
    )
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('picture_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['picture_id'], ['pictures.id'], name=op.f('fk_categories_picture_id_pictures')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories')),
    sa.UniqueConstraint('name', name=op.f('uq_categories_name'))
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('picture_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['picture_id'], ['pictures.id'], name=op.f('fk_locations_picture_id_pictures')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_locations'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identity_document_id', sa.Integer(), nullable=True),
    sa.Column('picture_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('facebook', sa.String(length=256), nullable=True),
    sa.Column('instagram', sa.String(length=256), nullable=True),
    sa.Column('twitter', sa.String(length=256), nullable=True),
    sa.Column('card', sa.String(length=16), nullable=True),
    sa.Column('card_id', sa.String(length=16), nullable=True),
    sa.Column('pagarme_id', sa.String(length=32), nullable=True),
    sa.Column('billing_line_1', sa.String(length=256), nullable=True),
    sa.Column('billing_line_2', sa.String(length=256), nullable=True),
    sa.Column('billing_zip_code', sa.String(length=16), nullable=True),
    sa.Column('billing_city', sa.String(length=64), nullable=True),
    sa.Column('billing_state', sa.String(length=16), nullable=True),
    sa.Column('billing_country', sa.String(length=16), nullable=True),
    sa.Column('verification_code', sa.String(length=6), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('activated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('reset_password_uid', sa.String(length=64), nullable=False),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['identity_document_id'], ['pictures.id'], name=op.f('fk_users_identity_document_id_pictures')),
    sa.ForeignKeyConstraint(['picture_id'], ['pictures.id'], name=op.f('fk_users_picture_id_pictures')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('picture_id', sa.Integer(), nullable=True),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('url', sa.String(length=256), nullable=True),
    sa.Column('observations', sa.String(length=512), nullable=True),
    sa.Column('warning', sa.String(), nullable=True),
    sa.Column('date_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('venue', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_events_category_id_categories')),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name=op.f('fk_events_creator_id_users')),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_events_location_id_locations')),
    sa.ForeignKeyConstraint(['picture_id'], ['pictures.id'], name=op.f('fk_events_picture_id_pictures')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_events'))
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('type_of', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=512), nullable=False),
    sa.Column('is_viewed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notifications_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    op.create_table('notifications_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('new_event', sa.Boolean(), nullable=False),
    sa.Column('new_ticket', sa.Boolean(), nullable=False),
    sa.Column('new_message', sa.Boolean(), nullable=False),
    sa.Column('new_buyers_payment', sa.Boolean(), nullable=False),
    sa.Column('ticket_transfer_confirmed', sa.Boolean(), nullable=False),
    sa.Column('your_payment_received', sa.Boolean(), nullable=False),
    sa.Column('dispute_started', sa.Boolean(), nullable=False),
    sa.Column('dispute_resolved', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notifications_configs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications_configs'))
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.Column('text', sa.String(length=512), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], name=op.f('fk_reviews_receiver_id_users')),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], name=op.f('fk_reviews_reviewer_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reviews'))
    )
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('ticket_type', sa.String(length=32), nullable=False),
    sa.Column('ticket_category', sa.String(length=32), nullable=False),
    sa.Column('is_paired', sa.Boolean(), nullable=False),
    sa.Column('pair_unique_id', sa.String(length=64), nullable=True),
    sa.Column('separate_selling_allowed', sa.Boolean(), nullable=False),
    sa.Column('file', sa.LargeBinary(), nullable=True),
    sa.Column('wallet_id', sa.String(length=512), nullable=True),
    sa.Column('warning', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('section', sa.String(length=16), nullable=True),
    sa.Column('queue', sa.String(length=16), nullable=True),
    sa.Column('seat', sa.String(length=16), nullable=True),
    sa.Column('price_net', sa.Integer(), nullable=True),
    sa.Column('price_gross', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('is_in_cart', sa.Boolean(), nullable=False),
    sa.Column('is_reserved', sa.Boolean(), nullable=False),
    sa.Column('last_reservation_time', sa.DateTime(), nullable=True),
    sa.Column('is_sold', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], name=op.f('fk_tickets_buyer_id_users')),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_tickets_event_id_events')),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], name=op.f('fk_tickets_seller_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tickets'))
    )
    op.create_table('users_events',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_users_events_event_id_events')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_users_events_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'event_id', name=op.f('pk_users_events'))
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], name=op.f('fk_payments_buyer_id_users')),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], name=op.f('fk_payments_ticket_id_tickets')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments'))
    )
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('type_of', sa.String(length=32), nullable=False),
    sa.Column('is_open', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], name=op.f('fk_rooms_buyer_id_users')),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], name=op.f('fk_rooms_seller_id_users')),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], name=op.f('fk_rooms_ticket_id_tickets')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rooms'))
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unique_id', sa.String(length=36), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('viewed', sa.Boolean(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name=op.f('fk_messages_room_id_rooms')),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name=op.f('fk_messages_sender_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_messages'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('messages')
    op.drop_table('rooms')
    op.drop_table('payments')
    op.drop_table('users_events')
    op.drop_table('tickets')
    op.drop_table('reviews')
    op.drop_table('notifications_configs')
    op.drop_table('notifications')
    op.drop_table('events')
    op.drop_table('users')
    op.drop_table('locations')
    op.drop_table('categories')
    op.drop_table('pictures')
    # ### end Alembic commands ###
