/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./src/event.ts ***!
  \**********************/
document.addEventListener('DOMContentLoaded', function () {
    var buttonFilterDate = document.querySelector('#events-filter-date-button');
    var buttonLocation = document.querySelector('#events-filter-location-button');
    var buttonCategories = document.querySelector('#events-filter-categories-button');
    var buttonDateApply = document.querySelector('#events-filter-date-apply-button');
    var dropdownFilterDate = document.querySelector('#events-filter-date-dropdown');
    var dropdownFilterLocation = document.querySelector('#events-filter-location-dropdown');
    var dropdownFilterCategories = document.querySelector('#events-filter-categories-dropdown');
    var statusFilterLocation = document.querySelector('#events-filter-location-status');
    var inputLocation = document.querySelector('#events-filter-location-input');
    var datalistLocation = document.querySelector('#events-filter-location-list');
    function addHiddenClass(element) {
        element.classList.add('hidden');
    }
    function handleHideEvents(event, element, otherElement) {
        if (!element.contains(event.target) &&
            !otherElement.some(function (el) { return el.contains(event.target); })) {
            addHiddenClass(element);
        }
    }
    function addHideEventsForElement(element, otherElement) {
        if (otherElement === void 0) { otherElement = []; }
        element.classList.toggle('hidden');
        window.addEventListener('mouseup', function (event) {
            handleHideEvents(event, element, otherElement);
        });
        document.addEventListener('keydown', function (event) {
            if (event.key === 'Escape') {
                addHiddenClass(element);
            }
        });
    }
    buttonFilterDate.addEventListener('click', function () {
        var datePickers = document.querySelectorAll('.datepicker');
        var datePickerArray = Array.from(datePickers);
        addHideEventsForElement(dropdownFilterDate, datePickerArray);
    });
    buttonDateApply.addEventListener('click', function () {
        dropdownFilterDate.classList.toggle('hidden');
    });
    buttonLocation.addEventListener('click', function () {
        addHideEventsForElement(dropdownFilterLocation);
        inputLocation.focus();
    });
    buttonCategories.addEventListener('click', function () {
        addHideEventsForElement(dropdownFilterCategories);
    });
    inputLocation.onfocus = function () {
        datalistLocation.style.display = 'block';
        inputLocation.style.borderRadius = '5px 5px 0 0';
    };
    var _loop_1 = function (index) {
        var option = datalistLocation.options[index];
        option.onclick = function () {
            inputLocation.value = option.value;
            statusFilterLocation.innerHTML = option.value;
            datalistLocation.style.display = 'none';
            inputLocation.style.borderRadius = '5px';
        };
    };
    for (var index in datalistLocation.options) {
        _loop_1(index);
    }
    inputLocation.oninput = function () {
        currentFocus = -1;
        var text = inputLocation.value.toUpperCase();
        for (var index in datalistLocation.options) {
            var option = datalistLocation.options[index];
            option.value.toUpperCase().indexOf(text) > -1
                ? (option.style.display = 'block')
                : (option.style.display = 'none');
        }
    };
    var currentFocus = -1;
    inputLocation.onkeydown = function (e) {
        if (e.keyCode == 40) {
            currentFocus++;
            addActive(datalistLocation.options);
        }
        else if (e.keyCode == 38) {
            currentFocus--;
            addActive(datalistLocation.options);
        }
        else if (e.keyCode == 13) {
            e.preventDefault();
            if (currentFocus > -1) {
                if (datalistLocation.options) {
                    datalistLocation.options[currentFocus].click();
                }
            }
        }
    };
    function addActive(x) {
        if (!x)
            return;
        false;
        removeActive(x);
        if (currentFocus >= x.length)
            currentFocus = 0;
        if (currentFocus < 0)
            currentFocus = x.length - 1;
        x[currentFocus].classList.add('active');
    }
    function removeActive(x) {
        for (var i = 0; i < x.length; i++) {
            x[i].classList.remove('active');
        }
    }
});

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
